//
//  HandbookShowInteractor.swift
//  OmnieCommerce
//
//  Created by msm72 on 15.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol HandbookShowInteractorInput {
    func handbookDidCreate(withRequestModel requestModel: HandbookShowModels.Item.RequestModel)
    func handbookImageDidUpload(withRequestModel requestModel: HandbookShowModels.Image.RequestModel)
}

protocol HandbookShowInteractorOutput {
    func handbookDidPrepareToShowCreate(fromResponseModel responseModel: HandbookShowModels.Item.ResponseModel)
    func handbookImageDidPrepareToShowUpload(fromResponseModel responseModel: HandbookShowModels.Image.ResponseModel)
}

class HandbookShowInteractor: HandbookShowInteractorInput {
    // MARK: - Properties
    var presenter: HandbookShowInteractorOutput!
    var worker: HandbookShowWorker!
    
    
    // MARK: - Custom Functions. Business logic
    func handbookDidCreate(withRequestModel requestModel: HandbookShowModels.Item.RequestModel) {
        // NOTE: Create some Worker to do the work
        worker = HandbookShowWorker()
        worker.doSomeWork()
      
        // NOTE: Pass the result to the Presenter
        MSMRestApiManager.instance.userRequestDidRun(.userCreateNewHandbook(requestModel.parameters, true), withHandlerResponseAPICompletion:  { responseAPI in
            let handbookResponseModel = HandbookShowModels.Item.ResponseModel(responseAPI: responseAPI)
            self.presenter.handbookDidPrepareToShowCreate(fromResponseModel: handbookResponseModel)
        })
    }
    
    func handbookImageDidUpload(withRequestModel requestModel: HandbookShowModels.Image.RequestModel) {
        MSMRestApiManager.instance.userUploadImage(requestModel.image) { responseAPI in
            // Pass the result to the Presenter
            let imageUploadResponseModel = HandbookShowModels.Image.ResponseModel(responseAPI: responseAPI)
            self.presenter.handbookImageDidPrepareToShowUpload(fromResponseModel: imageUploadResponseModel)
        }
    }
}
