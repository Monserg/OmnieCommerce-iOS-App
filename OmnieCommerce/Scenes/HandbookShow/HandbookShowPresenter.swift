//
//  HandbookShowPresenter.swift
//  OmnieCommerce
//
//  Created by msm72 on 15.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol HandbookShowPresenterInput {
    func handbookDidPrepareToShowCreate(fromResponseModel responseModel: HandbookShowModels.Item.ResponseModel)
    func handbookImageDidPrepareToShowUpload(fromResponseModel responseModel: HandbookShowModels.Image.ResponseModel)
}

protocol HandbookShowPresenterOutput: class {
    func handbookDidShowCreate(fromViewModel viewModel: HandbookShowModels.Item.ViewModel)
    func handbookImageDidShowUpload(fromViewModel viewModel: HandbookShowModels.Image.ViewModel)
}

class HandbookShowPresenter: HandbookShowPresenterInput {
    // MARK: - Properties
    weak var viewController: HandbookShowPresenterOutput!
    
    
    // MARK: - Custom Functions. Presentation logic
    func handbookDidPrepareToShowCreate(fromResponseModel responseModel: HandbookShowModels.Item.ResponseModel) {
        // NOTE: Format the response from the Interactor and pass the result back to the View Controller
        let handbookViewModel = HandbookShowModels.Item.ViewModel(status: (responseModel.responseAPI?.status)!)
        viewController.handbookDidShowCreate(fromViewModel: handbookViewModel)
    }
    
    func handbookImageDidPrepareToShowUpload(fromResponseModel responseModel: HandbookShowModels.Image.ResponseModel) {
        let uploadImageViewModel = HandbookShowModels.Image.ViewModel(responseAPI: responseModel.responseAPI)
        viewController.handbookImageDidShowUpload(fromViewModel: uploadImageViewModel)
    }
}
