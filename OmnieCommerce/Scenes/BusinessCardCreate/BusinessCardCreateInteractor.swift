//
//  BusinessCardCreateInteractor.swift
//  OmnieCommerce
//
//  Created by msm72 on 30.05.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Interactor component VIP-cicle
protocol BusinessCardCreateInteractorInput {
    func businessCardDidCreate(withRequestModel requestModel: BusinessCardCreateModels.Item.RequestModel)
    func businessCardImageDidUpload(withRequestModel requestModel: BusinessCardCreateModels.Image.RequestModel)
}

// MARK: - Output protocols for Presenter component VIP-cicle
protocol BusinessCardCreateInteractorOutput {
    func businessCardDidPrepareToShowCreate(fromResponseModel responseModel: BusinessCardCreateModels.Item.ResponseModel)
    func businessCardImageDidPrepareToShowUpload(fromResponseModel responseModel: BusinessCardCreateModels.Image.ResponseModel)
}

class BusinessCardCreateInteractor: BusinessCardCreateInteractorInput {
    // MARK: - Properties
    var presenter: BusinessCardCreateInteractorOutput!
    var worker: BusinessCardCreateWorker!
    
    
    // MARK: - Custom Functions. Business logic
    func businessCardDidCreate(withRequestModel requestModel: BusinessCardCreateModels.Item.RequestModel) {
        // NOTE: Pass the result to the Presenter
        MSMRestApiManager.instance.userRequestDidRun(.userCreateNewBusinessCard(requestModel.parameters, true), withHandlerResponseAPICompletion:  { responseAPI in
            let businessCardResponseModel = BusinessCardCreateModels.Item.ResponseModel(responseAPI: responseAPI)
            self.presenter.businessCardDidPrepareToShowCreate(fromResponseModel: businessCardResponseModel)
        })
    }
    
    func businessCardImageDidUpload(withRequestModel requestModel: BusinessCardCreateModels.Image.RequestModel) {
        MSMRestApiManager.instance.userUploadImage(requestModel.image) { responseAPI in
            // Pass the result to the Presenter
            let imageUploadResponseModel = BusinessCardCreateModels.Image.ResponseModel(responseAPI: responseAPI)
            self.presenter.businessCardImageDidPrepareToShowUpload(fromResponseModel: imageUploadResponseModel)
        }
    }
}
