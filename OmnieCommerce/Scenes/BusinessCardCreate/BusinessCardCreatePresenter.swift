//
//  BusinessCardCreatePresenter.swift
//  OmnieCommerce
//
//  Created by msm72 on 30.05.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Presenter component VIP-cicle
protocol BusinessCardCreatePresenterInput {
    func businessCardDidPrepareToShowCreate(fromResponseModel responseModel: BusinessCardCreateModels.Create.ResponseModel)
    func businessCardDidPrepareToShowUpload(fromResponseModel responseModel: BusinessCardCreateModels.Upload.ResponseModel)
    func businessCardImageDidPrepareToShowUpload(fromResponseModel responseModel: BusinessCardCreateModels.Image.ResponseModel)
}

// MARK: - Output protocols for ViewController component VIP-cicle
protocol BusinessCardCreatePresenterOutput: class {
    func businessCardDidShowCreate(fromViewModel viewModel: BusinessCardCreateModels.Create.ViewModel)
    func businessCardDidShowUpload(fromViewModel viewModel: BusinessCardCreateModels.Upload.ViewModel)
    func businessCardImageDidShowUpload(fromViewModel viewModel: BusinessCardCreateModels.Image.ViewModel)
}

class BusinessCardCreatePresenter: BusinessCardCreatePresenterInput {
    // MARK: - Properties
    weak var viewController: BusinessCardCreatePresenterOutput!
    
    
    // MARK: - Custom Functions. Presentation logic
    func businessCardDidPrepareToShowCreate(fromResponseModel responseModel: BusinessCardCreateModels.Create.ResponseModel) {
        guard responseModel.responseAPI != nil else {
            let businessCardViewModel = BusinessCardCreateModels.Create.ViewModel(status: "RESPONSE_NIL")
            self.viewController.businessCardDidShowCreate(fromViewModel: businessCardViewModel)
            
            return
        }

        // NOTE: Format the response from the Interactor and pass the result back to the View Controller
        let businessCardViewModel = BusinessCardCreateModels.Create.ViewModel(status: (responseModel.responseAPI?.status)!)
        viewController.businessCardDidShowCreate(fromViewModel: businessCardViewModel)
    }

    func businessCardDidPrepareToShowUpload(fromResponseModel responseModel: BusinessCardCreateModels.Upload.ResponseModel) {
        guard responseModel.responseAPI != nil else {
            let businessCardViewModel = BusinessCardCreateModels.Upload.ViewModel(status: "RESPONSE_NIL")
            self.viewController.businessCardDidShowUpload(fromViewModel: businessCardViewModel)
            
            return
        }
        
        // NOTE: Format the response from the Interactor and pass the result back to the View Controller
        if (responseModel.responseAPI!.status == "SUCCESS") {
            if let codeID = responseModel.parameters["uuid"] as? String {
                if let businessCard = CoreDataManager.instance.entityBy("BusinessCard", andCodeID: codeID) as? BusinessCard {
                    businessCard.profileDidEdit(json: responseModel.parameters as [String: AnyObject])
                }
            }
        }
        
        CoreDataManager.instance.didSaveContext()
        
        let businessCardViewModel = BusinessCardCreateModels.Upload.ViewModel(status: (responseModel.responseAPI?.status)!)
        viewController.businessCardDidShowUpload(fromViewModel: businessCardViewModel)
    }

    func businessCardImageDidPrepareToShowUpload(fromResponseModel responseModel: BusinessCardCreateModels.Image.ResponseModel) {
        // NOTE: Format the response from the Interactor and pass the result back to the View Controller
        let uploadImageViewModel = BusinessCardCreateModels.Image.ViewModel(responseAPI: responseModel.responseAPI)
        viewController.businessCardImageDidShowUpload(fromViewModel: uploadImageViewModel)
    }
}
