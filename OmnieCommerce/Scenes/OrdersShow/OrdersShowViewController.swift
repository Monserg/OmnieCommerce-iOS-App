//
//  OrdersShowViewController.swift
//  OmnieCommerce
//
//  Created by msm72 on 09.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol OrdersShowViewControllerInput {
    func displaySomething(viewModel: OrdersShow.Something.ViewModel)
}

protocol OrdersShowViewControllerOutput {
    func doSomething(request: OrdersShow.Something.Request)
}

class OrdersShowViewController: BaseViewController {
    // MARK: - Properties
    var output: OrdersShowViewControllerOutput!
    var router: OrdersShowRouter!
    
    var orders = [Order]()
    var statusCode: String = ""
    var limit: Int!
    
    var currentDate: Date! {
        didSet {
            setupTitleLabel(withDate: currentDate)
        }
    }

    var orderStatesDropDownTableView: MSMTableView! {
        didSet {
            let orderStatesTableManager = MSMTableViewControllerManager.init(withTableView: orderStatesDropDownTableView,
                                                                             andSectionsCount: 1,
                                                                             andEmptyMessageText: "DropDownList")
            
            orderStatesDropDownTableView.tableViewControllerManager = orderStatesTableManager
            orderStatesDropDownTableView.alpha = 0
            
//            var orderStates = CoreDataManager.instance.entitiesDidLoad(byName: "OrderState",
//                                                                       andPredicateParameter: ["order.codeID": order!.codeID])
//            
//            orderStatesDropDownTableView.tableViewControllerManager.dataSource = orderStates!.sorted(by: { ($0 as! OrderState).codeID < ($1 as! OrderState).codeID })
        }
    }

    // Outlets
    @IBOutlet weak var smallTopBarView: SmallTopBarView!
    @IBOutlet weak var calendarTitleLabel: UbuntuLightVeryLightGrayLabel!
    
    @IBOutlet weak var tableView: MSMTableView! {
        didSet {
            tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0)
            tableView.scrollIndicatorInsets = UIEdgeInsetsMake(0, 0, 0, 0)
            
            // Create MSMTableViewControllerManager
            self.tableView.hasHeaders = false
            self.tableView.headears = nil
            
            let ordersTableManager = MSMTableViewControllerManager.init(withTableView: self.tableView,
                                                                        andSectionsCount: 1,
                                                                        andEmptyMessageText: "Orders list is empty")
            
            tableView.tableViewControllerManager = ordersTableManager
            tableView.tableViewControllerManager.dataSource = orders
            tableView.reloadData()
        }
    }


    // MARK: - Class Initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        OrdersShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        viewSettingsDidLoad()
    }
    
    
    // MARK: - Custom Functions
    func viewSettingsDidLoad() {
        print(object: "\(type(of: self)): \(#function) run.")
        
        // Config smallTopBarView
        navigationBarView = smallTopBarView
        smallTopBarView.type = "ParentSearch"
        haveMenuItem = true
        currentDate = Date()
        
        // Load data
        let ordersRequestModel = OrdersShow.Something.Request()
        output.doSomething(request: ordersRequestModel)
    }
    
    func setupTitleLabel(withDate date: Date) {
        calendarTitleLabel.text = date.convertToString(withStyle: .WeekdayMonthYear)
    }

    
    // MARK: - Transition
    override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {
        print(object: "\(type(of: self)): \(#function) run. New size = \(size)")
        
        smallTopBarView.setNeedsDisplay()
        smallTopBarView.circleView.setNeedsDisplay()
    }
    
    
    // MARK: - Actions
    @IBAction func handlerPreviousButtonTap(_ sender: UIButton) {
        currentDate = Calendar.current.date(byAdding: .day, value: -1, to: currentDate)!
    }
    
    @IBAction func handlerNextButtonTap(_ sender: UIButton) {
        currentDate = Calendar.current.date(byAdding: .day, value: 1, to: currentDate)!
    }
}


// MARK: - OrdersShowViewControllerInput
extension OrdersShowViewController: OrdersShowViewControllerInput {
    func displaySomething(viewModel: OrdersShow.Something.ViewModel) {

    }
}
