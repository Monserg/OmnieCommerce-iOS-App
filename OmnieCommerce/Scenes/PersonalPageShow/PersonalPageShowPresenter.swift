//
//  PersonalPageShowPresenter.swift
//  OmnieCommerce
//
//  Created by msm72 on 15.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Presenter component VIP-cicle
protocol PersonalPageShowPresenterInput {
    func userAppDataDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.LoadData.ResponseModel)
    func userAppDataDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadData.ResponseModel)
    func userAppImageDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadImage.ResponseModel)
    func userAppImageDidPrepareToShowDelete(fromResponseModel responseModel: PersonalPageShowModels.LoadData.ResponseModel)
    func userAppPasswordDidPrepareToShowChange(fromResponseModel responseModel: PersonalPageShowModels.UploadData.ResponseModel)
    func userAppEmailDidPrepareToShowChange(fromResponseModel responseModel: PersonalPageShowModels.ChangeEmail.ResponseModel)
    func userAppTemplatesDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.Templates.ResponseModel)
}

// MARK: - Output protocols for ViewController component VIP-cicle
protocol PersonalPageShowPresenterOutput: class {
    func userAppDataDidShowLoad(fromViewModel viewModel: PersonalPageShowModels.LoadData.ViewModel)
    func userAppDataDidShowUpload(fromViewModel viewModel: PersonalPageShowModels.UploadData.ViewModel)
    func userAppImageDidShowUpload(fromViewModel viewModel: PersonalPageShowModels.UploadImage.ViewModel)
    func userAppImageDidShowDelete(fromViewModel viewModel: PersonalPageShowModels.LoadData.ViewModel)
    func userAppPasswordDidShowChange(fromViewModel viewModel: PersonalPageShowModels.UploadData.ViewModel)
    func userAppEmailDidShowChange(fromViewModel viewModel: PersonalPageShowModels.ChangeEmail.ViewModel)
    func userAppTemplatesDidShowLoad(fromViewModel viewModel: PersonalPageShowModels.Templates.ViewModel)
}

class PersonalPageShowPresenter: PersonalPageShowPresenterInput {
    // MARK: - Properties
    weak var viewController: PersonalPageShowPresenterOutput!
    
    
    // MARK: - Custom Functions. Presentation logic
    func userAppDataDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.LoadData.ResponseModel) {
        let loadViewModel = PersonalPageShowModels.LoadData.ViewModel(responseAPI: responseModel.responseAPI)
        viewController.userAppDataDidShowLoad(fromViewModel: loadViewModel)
    }
    
    func userAppDataDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadData.ResponseModel) {
        let uploadDataViewModel = PersonalPageShowModels.UploadData.ViewModel(status: responseModel.responseAPI!.status,
                                                                              passwordsParams: responseModel.passwordsParams)
        
        viewController.userAppDataDidShowUpload(fromViewModel: uploadDataViewModel)
    }
    
    func userAppImageDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadImage.ResponseModel) {
        if let imageID = responseModel.responseAPI?.body as? String, !imageID.isEmpty {
            let appUser = CoreDataManager.instance.entityDidLoad(byName: "AppUser", andPredicateParameters: nil) as! AppUser
            appUser.imageID = imageID
            CoreDataManager.instance.didSaveContext()
        }
        
        let uploadImageViewModel = PersonalPageShowModels.UploadImage.ViewModel(status: responseModel.responseAPI!.status)
        viewController.userAppImageDidShowUpload(fromViewModel: uploadImageViewModel)
    }

    func userAppImageDidPrepareToShowDelete(fromResponseModel responseModel: PersonalPageShowModels.LoadData.ResponseModel) {
        if (responseModel.responseAPI?.code == 200) {
            let deleteImageViewModel = PersonalPageShowModels.LoadData.ViewModel(responseAPI: responseModel.responseAPI)
            viewController.userAppImageDidShowDelete(fromViewModel: deleteImageViewModel)
            
            let appUser = CoreDataManager.instance.entityDidCreate(byName: "AppUser") as! AppUser
            appUser.imageID = nil
            CoreDataManager.instance.didSaveContext()
        }
    }
    
    func userAppPasswordDidPrepareToShowChange(fromResponseModel responseModel: PersonalPageShowModels.UploadData.ResponseModel) {
        let passwordChangeViewModel = PersonalPageShowModels.UploadData.ViewModel(status: responseModel.responseAPI!.status,
                                                                                  passwordsParams: nil)
        
        viewController.userAppPasswordDidShowChange(fromViewModel: passwordChangeViewModel)
    }
    
    func userAppEmailDidPrepareToShowChange(fromResponseModel responseModel: PersonalPageShowModels.ChangeEmail.ResponseModel) {
        let emailChangeViewModel = PersonalPageShowModels.ChangeEmail.ViewModel(responseAPI: responseModel.responseAPI)
        viewController.userAppEmailDidShowChange(fromViewModel: emailChangeViewModel)
    }

    func userAppTemplatesDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.Templates.ResponseModel) {
        let viewModel = PersonalPageShowModels.Templates.ViewModel(organizations: responseModel.items)
        viewController.userAppTemplatesDidShowLoad(fromViewModel: viewModel)
    }
}
