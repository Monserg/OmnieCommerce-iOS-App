//
//  PersonalPageShowPresenter.swift
//  OmnieCommerce
//
//  Created by msm72 on 15.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Presenter component VIP-cicle
protocol PersonalPageShowPresenterInput {
    func userAppDataDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.LoadData.ResponseModel)
    func userAppDataDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadData.ResponseModel)
    func userAppImageDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadImage.ResponseModel)
    func userAppTemplatesDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.Templates.ResponseModel)
}

// MARK: - Output protocols for ViewController component VIP-cicle
protocol PersonalPageShowPresenterOutput: class {
    func userAppDataDidShowLoad(fromViewModel viewModel: PersonalPageShowModels.LoadData.ViewModel)
    func userAppDataDidShowUpload(fromViewModel viewModel: PersonalPageShowModels.UploadData.ViewModel)
    func userAppImageDidShowUpload(fromViewModel viewModel: PersonalPageShowModels.UploadImage.ViewModel)
    func userAppTemplatesDidShowLoad(fromViewModel viewModel: PersonalPageShowModels.Templates.ViewModel)
}

class PersonalPageShowPresenter: PersonalPageShowPresenterInput {
    // MARK: - Properties
    weak var viewController: PersonalPageShowPresenterOutput!
    
    
    // MARK: - Custom Functions. Presentation logic
    func userAppDataDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.LoadData.ResponseModel) {
        let loadViewModel = PersonalPageShowModels.LoadData.ViewModel(response: responseModel.response)
        viewController.userAppDataDidShowLoad(fromViewModel: loadViewModel)
    }
    
    func userAppDataDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadData.ResponseModel) {
        
        //        self.activeViewController?.userApp = viewModel.userApp

        let uploadViewModel = PersonalPageShowModels.UploadData.ViewModel(response: responseModel.response)
        viewController.userAppDataDidShowUpload(fromViewModel: uploadViewModel)
    }
    
    func userAppImageDidPrepareToShowUpload(fromResponseModel responseModel: PersonalPageShowModels.UploadImage.ResponseModel) {
        let imageURL = responseModel.response?.body as? String
        
        if (imageURL != nil) {
            CoreDataManager.instance.appUser.imagePath = imageURL!
        }
        
        let uploadImageViewModel = PersonalPageShowModels.UploadImage.ViewModel(imageStringURL: imageURL)
        viewController.userAppImageDidShowUpload(fromViewModel: uploadImageViewModel)
    }

    func userAppTemplatesDidPrepareToShowLoad(fromResponseModel responseModel: PersonalPageShowModels.Templates.ResponseModel) {
        let viewModel = PersonalPageShowModels.Templates.ViewModel(organizations: responseModel.items)
        viewController.userAppTemplatesDidShowLoad(fromViewModel: viewModel)
    }
}
