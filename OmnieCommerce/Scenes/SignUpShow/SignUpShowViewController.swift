//
//  SignUpShowViewController.swift
//  OmnieCommerce
//
//  Created by msm72 on 13.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol SignUpShowViewControllerInput {
    func displaySomething(viewModel: SignUpShow.Something.ViewModel)
}

protocol SignUpShowViewControllerOutput {
    func doSomething(request: SignUpShow.Something.Request)
}

class SignUpShowViewController: BaseViewController, SignUpShowViewControllerInput {
    // MARK: - Properties
    var output: SignUpShowViewControllerOutput!
    var router: SignUpShowRouter!
    
    @IBOutlet weak var topBarView: TopBarView!
    @IBOutlet weak var contentView: UIView!
    @IBOutlet weak var nameTextField: CustomTextField!
    @IBOutlet weak var emailTextField: CustomTextField!
    @IBOutlet weak var passwordTextField: CustomTextField!

    
    // MARK: - Class initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        SignUpShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        topBarViewStyle = .Big
        
        // Delegates
//        nameTextField.delegate = self
//        emailTextField.delegate = self
//        passwordTextField.delegate = self
        
        // Config scene
///        contentViewBase = contentView
        setup(topBarView: topBarView)

        doSomethingOnLoad()
    }
    
    
    // MARK: - Actions
    @IBAction func handlerSignUpButtonTap(_ sender: CustomButton) {
    }
    
    @IBAction func handlerCancelButtonTap(_ sender: CustomButton) {
        _ = navigationController?.popToRootViewController(animated: true)
    }
    
    
    // MARK: - Custom Functions
    func doSomethingOnLoad() {
        // NOTE: Ask the Interactor to do some work
        let request = SignUpShow.Something.Request()
        output.doSomething(request: request)
    }
    
    // Display logic
    func displaySomething(viewModel: SignUpShow.Something.ViewModel) {
        // NOTE: Display the result from the Presenter
        // nameTextField.text = viewModel.name
    }
}
