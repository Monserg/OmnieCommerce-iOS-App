//
//  SignUpShowViewController.swift
//  OmnieCommerce
//
//  Created by msm72 on 13.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol SignUpShowViewControllerInput {
    func displaySomething(viewModel: SignUpShow.Something.ViewModel)
}

protocol SignUpShowViewControllerOutput {
    func doSomething(request: SignUpShow.Something.Request)
}

class SignUpShowViewController: BaseViewController, SignUpShowViewControllerInput {
    // MARK: - Properties
    var output: SignUpShowViewControllerOutput!
    var router: SignUpShowRouter!
    
    @IBOutlet var bigTopBarView: BigTopBarView!
    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet weak var nameTextField: CustomTextField!
    @IBOutlet weak var emailTextField: CustomTextField!
    @IBOutlet weak var passwordTextField: CustomTextField!
    @IBOutlet weak var emailErrorLabel: CustomLabel!

    @IBOutlet weak var vkontakteButton: CustomButton!
    @IBOutlet weak var googleButton: CustomButton!
    @IBOutlet weak var facebookButton: CustomButton!

    
    // MARK: - Class Initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        SignUpShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Delegates
        scrollView.delegate = self
        nameTextField.delegate = self
        emailTextField.delegate = self
        passwordTextField.delegate = self
        
        // Config controls
        topBarViewStyle = .Big
        scrollViewBase = scrollView
        emailErrorLabel.isHidden = true
        
        // Set buttons type
        vkontakteButton.designStyle = "Social"
        googleButton.designStyle = "Social"
        facebookButton.designStyle = "Social"
        
        setup(topBarView: bigTopBarView)
    }
    
    
    // MARK: - Transition
    override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {
        print(object: "\(type(of: self)): \(#function) run. New size = \(size)")
        
        setupScene(withSize: size)
    }

    
    // MARK: - Actions
    @IBAction func handlerSignUpButtonTap(_ sender: CustomButton) {
        print(object: "\(type(of: self)): \(#function) run.")
        
    }
    
    @IBAction func handlerCancelButtonTap(_ sender: CustomButton) {
        print(object: "\(type(of: self)): \(#function) run.")
        
        _ = navigationController?.popToRootViewController(animated: true)
    }
    
    @IBAction func handlerVkontakteButtonTap(_ sender: CustomButton) {
        print(object: "\(type(of: self)): \(#function) run.")
        
    }
    
    @IBAction func handlerGoogleButtonTap(_ sender: CustomButton) {
        print(object: "\(type(of: self)): \(#function) run.")
        
    }
    
    @IBAction func handlerFacebookButtonTap(_ sender: CustomButton) {
        print(object: "\(type(of: self)): \(#function) run.")
        
    }

    
    // MARK: - Custom Functions
    func doSomethingOnLoad() {
        print(object: "\(type(of: self)): \(#function) run.")
        
        // NOTE: Ask the Interactor to do some work
        let request = SignUpShow.Something.Request()
        output.doSomething(request: request)
    }
    
    // Display logic
    func displaySomething(viewModel: SignUpShow.Something.ViewModel) {
        print(object: "\(type(of: self)): \(#function) run.")
        
        // NOTE: Display the result from the Presenter
        // nameTextField.text = viewModel.name
    }
    
    func setupScene(withSize size: CGSize) {
        print(object: "\(type(of: self)): \(#function) run. Screen view size = \(size)")
        
        bigTopBarView.setNeedsDisplay()
        bigTopBarView.circleView.setNeedsDisplay()
        vkontakteButton.setNeedsDisplay()
        googleButton.setNeedsDisplay()
        facebookButton.setNeedsDisplay()
    }
}
