//
//  CategoriesShowPresenter.swift
//  OmnieCommerce
//
//  Created by msm72 on 09.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Presenter component VIP-cicle
protocol CategoriesShowPresenterInput {
    func categoriesDidPrepareToShowLoad(fromResponseModel responseModel: CategoriesShowModels.Categories.ResponseModel)
}

// MARK: - Output protocols for ViewController component VIP-cicle
protocol CategoriesShowPresenterOutput: class {
    func categoriesDidShowLoad(fromViewModel viewModel: CategoriesShowModels.Categories.ViewModel)
}

class CategoriesShowPresenter: CategoriesShowPresenterInput {
    // MARK: - Properties
    weak var viewController: CategoriesShowPresenterOutput!
    
    
    // MARK: - Custom Functions. Presentation logic
    func categoriesDidPrepareToShowLoad(fromResponseModel responseModel: CategoriesShowModels.Categories.ResponseModel) {
        guard responseModel.responseAPI != nil else {
            let categoriesViewModel = CategoriesShowModels.Categories.ViewModel(status: "RESPONSE_NIL")
            viewController.categoriesDidShowLoad(fromViewModel: categoriesViewModel)
            
            return
        }

        // Convert responseAPI body to Category CoreData objects
        for json in responseModel.responseAPI!.body as! [Any] {
            _ = Category.init(json: json as! [String: AnyObject])
        }
        
        CoreDataManager.instance.didSaveContext()

        let categoriesViewModel = CategoriesShowModels.Categories.ViewModel(status: (responseModel.responseAPI?.status)!)
        self.viewController.categoriesDidShowLoad(fromViewModel: categoriesViewModel)
    }
}
