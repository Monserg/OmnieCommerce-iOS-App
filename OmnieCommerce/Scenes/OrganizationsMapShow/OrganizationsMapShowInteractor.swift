//
//  OrganizationsMapShowInteractor.swift
//  OmnieCommerce
//
//  Created by msm72 on 23.02.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Interactor component VIP-cicle
protocol OrganizationsMapShowInteractorInput {
    func didLoadLocations(withRequestModel requestModel: OrganizationsMapShowModels.Locations.RequestModel)
    func didStopUpdateLocations(withRequestModel requestModel: OrganizationsMapShowModels.Locations.RequestModel)
}

// MARK: - Output protocols for Presenter component VIP-cicle
protocol OrganizationsMapShowInteractorOutput {
    func didPrepareToShowLocations(fromResponseModel responseModel: OrganizationsMapShowModels.Locations.ResponseModel)
    func didPrepareToDismissViewController(fromResponseModel responseModel: OrganizationsMapShowModels.Locations.ResponseModel)
}

class OrganizationsMapShowInteractor: OrganizationsMapShowInteractorInput {
    // MARK: - Properties
    var presenter: OrganizationsMapShowInteractorOutput!
    var worker: OrganizationsMapShowWorker!
    
    
    // MARK: - Custom Functions. Business logic
    func didLoadLocations(withRequestModel requestModel: OrganizationsMapShowModels.Locations.RequestModel) {
        requestModel.locationManager.startCoreLocation(withOrganizations: requestModel.organizations)

        requestModel.locationManager.handlerLocationCompletion = { placemarks in
            let responseModel = OrganizationsMapShowModels.Locations.ResponseModel(placemarks: placemarks)

            self.presenter.didPrepareToShowLocations(fromResponseModel: responseModel)
        }
    }
    
    func didStopUpdateLocations(withRequestModel requestModel: OrganizationsMapShowModels.Locations.RequestModel) {
        worker = OrganizationsMapShowWorker()
        requestModel.locationManager.stopCoreLocation()
        
        let responseModel = OrganizationsMapShowModels.Locations.ResponseModel(placemarks: nil)
        presenter.didPrepareToDismissViewController(fromResponseModel: responseModel)
    }
}
