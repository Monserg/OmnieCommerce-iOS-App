//
//  OrganizationsMapShowInteractor.swift
//  OmnieCommerce
//
//  Created by msm72 on 23.02.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Interactor component VIP-cicle
protocol OrganizationsMapShowInteractorInput {
    func pointAnnotationsDidLoad(withRequestModel requestModel: OrganizationsMapShowModels.PointAnnotations.RequestModel)
}

// MARK: - Output protocols for Presenter component VIP-cicle
protocol OrganizationsMapShowInteractorOutput {
    func pointAnnotationsDidPrepareToShow(fromResponseModel responseModel: OrganizationsMapShowModels.PointAnnotations.ResponseModel)
}

class OrganizationsMapShowInteractor: OrganizationsMapShowInteractorInput {
    // MARK: - Properties
    var presenter: OrganizationsMapShowInteractorOutput!
    var worker: OrganizationsMapShowWorker!
    
    
    // MARK: - Custom Functions. Business logic
    func pointAnnotationsDidLoad(withRequestModel requestModel: OrganizationsMapShowModels.PointAnnotations.RequestModel) {
        UIApplication.shared.isNetworkActivityIndicatorVisible = true

        // NOTE: Create some Worker to do the work
        worker = OrganizationsMapShowWorker()
        worker.pointAnnotationsDidLoad(fromOrganizations: requestModel.organizations)

        let regionRect          =   worker.regionRect
        let pointAnnotations    =   worker.points
        
        let responseModel       =   OrganizationsMapShowModels.PointAnnotations.ResponseModel(result: pointAnnotations, regionRect: regionRect)
        presenter.pointAnnotationsDidPrepareToShow(fromResponseModel: responseModel)
    }
}
