//
//  MessagesShowViewController.swift
//  OmnieCommerce
//
//  Created by msm72 on 09.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol MessagesShowViewControllerInput {
    func displaySomething(viewModel: MessagesShow.Something.ViewModel)
}

protocol MessagesShowViewControllerOutput {
    func doSomething(request: MessagesShow.Something.Request)
}

class MessagesShowViewController: BaseViewController {
    // MARK: - Properties
    var output: MessagesShowViewControllerOutput!
    var router: MessagesShowRouter!
    
    var tableViewManager                    =   ListTableViewController()

    @IBOutlet weak var smallTopBarView: SmallTopBarView!
    @IBOutlet weak var copyrightLabel: CustomLabel!
    @IBOutlet weak var dataSourceEmptyView: UIView!

    @IBOutlet weak var tableView: CustomTableView! {
        didSet{
            // Register the Nib header/footer section views
            tableView.register(UINib(nibName: "MessageTableViewCell", bundle: nil), forCellReuseIdentifier: "MessageCell")
            
            // Delegates
            tableView.dataSource            =   tableViewManager
            tableView.delegate              =   tableViewManager
            tableViewManager.tableView      =   tableView
            tableViewManager.sourceType     =   .Message

            smallTopBarView.searchBar.placeholder   =   "Enter Organization name".localized()

            // Handler select cell
            tableViewManager.completionHandler = { organization in
                // TODO: ADD TRANSITION TO CHAT
                self.print(object: "transition to Chat scene")
            }
        }
    }

    
    // MARK: - Class Initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        MessagesShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Initialization
        for _ in 0 ..< 25 {
            let pathString = (arc4random_uniform(2) == 1) ? "http://www.nyhabitat.com/blog/wp-content/uploads/2013/08/fifth-avenue-shopping-manhattan-nyc-new-york.jpg" : nil
            
            let isOwn = (arc4random_uniform(2) == 1) ? true : false
            let avatar = (isOwn) ? "http://pngimg.com/upload/small/face_PNG11761.png" : "http://pngimg.com/upload/face_PNG5660.png"
            
            tableViewManager.dataSource.append(Message(title: "Акваторія", logoStringURL: pathString, activeDate: Date.init(), text: "Вже давно відомо, що читабельний людині...", isOwn: isOwn, userAvatarStringURL: avatar))
        }

        // Config topBarView
        smallTopBarView.type                =   "ParentSearch"
        topBarViewStyle                     =   .Small
        setup(topBarView: smallTopBarView)
        
        viewSettingsDidLoad()
    }
    

    // MARK: - Custom Functions
    func viewSettingsDidLoad() {
        print(object: "\(type(of: self)): \(#function) run.")
        
        // NOTE: Ask the Interactor to do some work
        let request = MessagesShow.Something.Request()
        output.doSomething(request: request)
    }
    
    func setupScene(withSize size: CGSize) {
        print(object: "\(type(of: self)): \(#function) run. Screen view size = \(size)")
        
        smallTopBarView.setNeedsDisplay()
        smallTopBarView.circleView.setNeedsDisplay()
        _ = tableView.visibleCells.map{ ($0 as! BaseTableViewCell).dottedBorderView.setNeedsDisplay() }
    }

    
    // MARK: - Actions
    
    
    
    // MARK: - Transition
    override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {
        print(object: "\(type(of: self)): \(#function) run. New size = \(size)")
        
        setupScene(withSize: size)
    }
}


// MARK: - MessagesShowViewControllerInput
extension MessagesShowViewController: MessagesShowViewControllerInput {
    func displaySomething(viewModel: MessagesShow.Something.ViewModel) {
//        tableViewManager.dataSource     =   viewModel
//        dataSourceEmptyView.isHidden    =   (self.messages.count == 0) ? false : true
        
        self.tableView.reloadData()
    }
}
