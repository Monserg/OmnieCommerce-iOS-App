//
//  MessagesShowViewController.swift
//  OmnieCommerce
//
//  Created by msm72 on 09.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import SWRevealViewController


// MARK: - Input & Output protocols
protocol MessagesShowViewControllerInput {
    func displaySomething(viewModel: MessagesShow.Something.ViewModel)
}

protocol MessagesShowViewControllerOutput {
    func doSomething(request: MessagesShow.Something.Request)
}

class MessagesShowViewController: UIViewController, MessagesShowViewControllerInput {
    // MARK: - Properties
    var output: MessagesShowViewControllerOutput!
    var router: MessagesShowRouter!
    
    @IBOutlet weak var menuBarButton: UIBarButtonItem!

    
    // MARK: - Class initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        MessagesShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        doSomethingOnLoad()
    }
    

    // MARK: - Custom Functions
    func doSomethingOnLoad() {
        // Add Slide Menu actions
        if revealViewController() != nil {
            self.menuBarButton.target = revealViewController()
            self.menuBarButton.action = #selector(SWRevealViewController.revealToggle(_:))
            revealViewController().rightViewRevealWidth = 150
            
            view.addGestureRecognizer(self.revealViewController().panGestureRecognizer())
        }

        // NOTE: Ask the Interactor to do some work
        let request = MessagesShow.Something.Request()
        output.doSomething(request: request)
    }
    
    // Display logic
    func displaySomething(viewModel: MessagesShow.Something.ViewModel) {
        // NOTE: Display the result from the Presenter
        // nameTextField.text = viewModel.name
    }
}
