//
//  ServicesShowViewController.swift
//  OmnieCommerce
//
//  Created by msm72 on 14.04.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current ViewController component VIP-cicle
protocol ServicesShowViewControllerInput {}

// MARK: - Output protocols for Interactor component VIP-cicle
protocol ServicesShowViewControllerOutput {}

class ServicesShowViewController: BaseViewController {
    // MARK: - Properties
    var interactor: ServicesShowViewControllerOutput!
    var router: ServicesShowRouter!
    
    var services = [Service]()
    
    @IBOutlet weak var smallTopBarView: SmallTopBarView!
    
    @IBOutlet weak var tableView: MSMTableView! {
        didSet {
            tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0)
            tableView.scrollIndicatorInsets = UIEdgeInsetsMake(0, 0, 0, 0)
            
            // Create MSMTableViewControllerManager
            let servicesTableManager = MSMTableViewControllerManager.init(withTableView: self.tableView, andSectionsCount: 1, andEmptyMessageText: "Services list is empty")
            tableView.tableViewControllerManager = servicesTableManager
            tableView.tableViewControllerManager.dataSource = services
            tableView.reloadData()
        }
    }
    

    // MARK: - Class initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        ServicesShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        viewSettingsDidLoad()
    }
    

    // MARK: - Custom Functions
    func viewSettingsDidLoad() {
        // Config smallTopBarView
        navigationBarView = smallTopBarView
        smallTopBarView.type = "Child"
        smallTopBarView.titleLabel.text = "All services".localized()
        haveMenuItem = false
        
        // Handler Back button tap
        smallTopBarView.handlerSendButtonCompletion = { _ in
            _ = self.navigationController?.popViewController(animated: true)
        }
    }
}


// MARK: - ServicesShowViewControllerInput
extension ServicesShowViewController: ServicesShowViewControllerInput {}
