//
//  DiscountCardsShowPresenter.swift
//  OmnieCommerce
//
//  Created by msm72 on 15.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol DiscountCardsShowPresenterInput {
    func discountCardsDidPrepareToShowLoad(fromResponseModel responseModel: DiscountCardsShowModels.Items.ResponseModel)
}

protocol DiscountCardsShowPresenterOutput: class {
    func discountCardsDidShowLoad(fromViewModel viewModel: DiscountCardsShowModels.Items.ViewModel)
}

class DiscountCardsShowPresenter: DiscountCardsShowPresenterInput {
    // MARK: - Properties
    weak var viewController: DiscountCardsShowPresenterOutput!
    
    
    // MARK: - Custom Functions. Presentation logic
    func discountCardsDidPrepareToShowLoad(fromResponseModel responseModel: DiscountCardsShowModels.Items.ResponseModel) {
        guard responseModel.responseAPI != nil else {
            let discountCardsViewModel = DiscountCardsShowModels.Items.ViewModel(status: (responseModel.responseAPI?.status)!)
            self.viewController.discountCardsDidShowLoad(fromViewModel: discountCardsViewModel)
            
            return
        }
        
        // Convert responseAPI body to DiscountCard CoreData objects
        for jsonDiscountCard in responseModel.responseAPI!.body as! [[String: AnyObject]] {
            if let codeID = jsonDiscountCard["uuid"] as? String {
                if let discountCard = CoreDataManager.instance.entityBy("DiscountCard", andCodeID: codeID) as? DiscountCard {
                    discountCard.profileDidUpload(json: jsonDiscountCard, forList: keyDiscountCards)
                }
            }
        }
        
        CoreDataManager.instance.didSaveContext()
        
        let discountCardsViewModel = DiscountCardsShowModels.Items.ViewModel(status: (responseModel.responseAPI?.status)!)
        self.viewController.discountCardsDidShowLoad(fromViewModel: discountCardsViewModel)
    }
}
