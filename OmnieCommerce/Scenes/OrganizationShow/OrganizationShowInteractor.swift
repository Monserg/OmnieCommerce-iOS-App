//
//  OrganizationShowInteractor.swift
//  OmnieCommerce
//
//  Created by msm72 on 26.02.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Interactor component VIP-cicle
protocol OrganizationShowInteractorInput {
    func organizationRatingDidSend(withRequestModel requestModel: OrganizationShowModels.Rating.RequestModel)
    func organizationDidLoad(withRequestModel requestModel: OrganizationShowModels.OrganizationItem.RequestModel)
    func businessCardDidCreateFromOrganization(withRequestModel requestModel: OrganizationShowModels.BusinessCard.RequestModel)
}

// MARK: - Output protocols for Presenter component VIP-cicle
protocol OrganizationShowInteractorOutput {
    func organizationRatingDidPrepareToShowSend(fromResponseModel responseModel: OrganizationShowModels.Rating.ResponseModel)
    func organizationDidPrepareToShowLoad(fromResponseModel responseModel: OrganizationShowModels.OrganizationItem.ResponseModel)
    func businessCardDidPrepareToShowCreateFromOrganization(fromResponseModel responseModel: OrganizationShowModels.BusinessCard.ResponseModel)
}

class OrganizationShowInteractor: OrganizationShowInteractorInput {
    // MARK: - Properties
    var presenter: OrganizationShowInteractorOutput!
    var worker: OrganizationShowWorker!
    
    
    // MARK: - Custom Functions. Business logic
    func organizationDidLoad(withRequestModel requestModel: OrganizationShowModels.OrganizationItem.RequestModel) {
        MSMRestApiManager.instance.userRequestDidRun(.userGetOrganizationByID(requestModel.parameters, false), withHandlerResponseAPICompletion: { responseAPI in
            // Pass the result to the Presenter
            let organizationResponseModel = OrganizationShowModels.OrganizationItem.ResponseModel(responseAPI: responseAPI, parameters: requestModel.parameters)
            self.presenter.organizationDidPrepareToShowLoad(fromResponseModel: organizationResponseModel)
        })
    }
    
    func organizationRatingDidSend(withRequestModel requestModel: OrganizationShowModels.Rating.RequestModel) {
        MSMRestApiManager.instance.userRequestDidRun(.userAddServiceReview(requestModel.parameters, true), withHandlerResponseAPICompletion: { responseAPI in
            // Pass the result to the Presenter
            let organizationRatingResponseModel = OrganizationShowModels.Rating.ResponseModel(responseAPI: responseAPI)
            self.presenter.organizationRatingDidPrepareToShowSend(fromResponseModel: organizationRatingResponseModel)
        })
    }
    
    func businessCardDidCreateFromOrganization(withRequestModel requestModel: OrganizationShowModels.BusinessCard.RequestModel) {
        MSMRestApiManager.instance.userRequestDidRun(.userCreateNewBusinessCardFromOrganization(requestModel.parameters, false), withHandlerResponseAPICompletion: { responseAPI in
            // Pass the result to the Presenter
            let businessCardResponseModel = OrganizationShowModels.BusinessCard.ResponseModel(responseAPI: responseAPI)
            self.presenter.businessCardDidPrepareToShowCreateFromOrganization(fromResponseModel: businessCardResponseModel)
        })
    }
}
