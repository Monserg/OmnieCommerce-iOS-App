//
//  SettingsShowPresenter.swift
//  OmnieCommerce
//
//  Created by msm72 on 15.11.16.
//  Copyright (c) 2016 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol SettingsShowPresenterInput {
    func appSettingsDidPrepareToShowLoad(fromResponseModel responseModel: SettingsShowModels.Items.ResponseModel)
    func appSettingsDidPrepareToShowUpload(fromResponseModel responseModel: SettingsShowModels.Items.ResponseModel)
}

protocol SettingsShowPresenterOutput: class {
    func appSettingsDidShowLoad(fromViewModel viewModel: SettingsShowModels.Items.ViewModel)
    func appSettingsDidShowUpload(fromViewModel viewModel: SettingsShowModels.Items.ViewModel)
}

class SettingsShowPresenter: SettingsShowPresenterInput {
    // MARK: - Properties
    weak var viewController: SettingsShowPresenterOutput!
    
    
    // MARK: - Custom Functions. Presentation logic
    func appSettingsDidPrepareToShowLoad(fromResponseModel responseModel: SettingsShowModels.Items.ResponseModel) {
        // NOTE: Format the response from the Interactor and pass the result back to the View Controller
        appSettings.settingsDidUpload(json: responseModel.responseAPI!.body as! [String: AnyObject])
        CoreDataManager.instance.didSaveContext()

        let appSettingViewModel = SettingsShowModels.Items.ViewModel(status: responseModel.responseAPI!.status)
        viewController.appSettingsDidShowLoad(fromViewModel: appSettingViewModel)
    }
    
    func appSettingsDidPrepareToShowUpload(fromResponseModel responseModel: SettingsShowModels.Items.ResponseModel) {
        // NOTE: Format the response from the Interactor and pass the result back to the View Controller
        let appSettingViewModel = SettingsShowModels.Items.ViewModel(status: responseModel.responseAPI!.status)
        viewController.appSettingsDidShowUpload(fromViewModel: appSettingViewModel)
    }
}
