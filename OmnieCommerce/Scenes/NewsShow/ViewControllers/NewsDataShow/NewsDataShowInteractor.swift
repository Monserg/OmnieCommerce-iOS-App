//
//  NewsDataShowInteractor.swift
//  OmnieCommerce
//
//  Created by msm72 on 31.03.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current Interactor component VIP-cicle
protocol NewsDataShowInteractorInput {
    func newsDataDidLoad(withRequestModel requestModel: NewsDataShowModels.Data.RequestModel)
}

// MARK: - Output protocols for Presenter component VIP-cicle
protocol NewsDataShowInteractorOutput {
    func newsDataDidPrepareToShowLoad(fromResponseModel responseModel: NewsDataShowModels.Data.ResponseModel)
}

class NewsDataShowInteractor: NewsDataShowInteractorInput {
    // MARK: - Properties
    var presenter: NewsDataShowInteractorOutput!
    var worker: NewsDataShowWorker!
    
    
    // MARK: - Custom Functions. Business logic
    func newsDataDidLoad(withRequestModel requestModel: NewsDataShowModels.Data.RequestModel) {
        // NOTE: Create some Worker to do the work
        worker = NewsDataShowWorker()
        worker.doSomeWork()
        
        // NOTE: Pass the result to the Presenter
//        MSMRestApiManager.instance.userGetNewsDataList(requestModel.parameters, withHandlerResponseAPICompletion: { responseAPI in
//            let newsDataResponseModel = NewsDataShowModels.Data.ResponseModel(response: responseAPI)
//            self.presenter.newsDataDidPrepareToShowLoad(fromResponseModel: newsDataResponseModel)
//        })
        
        // TESTED!!!
        MSMRestApiManager.instance.userRequestDidRun(.userGetNewsDataList(requestModel.parameters)) { responseAPI in
            let newsDataResponseModel = NewsDataShowModels.Data.ResponseModel(response: responseAPI)
            self.presenter.newsDataDidPrepareToShowLoad(fromResponseModel: newsDataResponseModel)
        }
    }
}
